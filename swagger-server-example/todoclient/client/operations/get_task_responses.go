// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/svanellewee/todoclient/models"
)

// GetTaskReader is a Reader for the GetTask structure.
type GetTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTaskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetTaskDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTaskOK creates a GetTaskOK with default headers values
func NewGetTaskOK() *GetTaskOK {
	return &GetTaskOK{}
}

/* GetTaskOK describes a response with status code 200, with default header values.

get all the tasks
*/
type GetTaskOK struct {
	Payload []*models.Task
}

func (o *GetTaskOK) Error() string {
	return fmt.Sprintf("[GET /task/][%d] getTaskOK  %+v", 200, o.Payload)
}
func (o *GetTaskOK) GetPayload() []*models.Task {
	return o.Payload
}

func (o *GetTaskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskDefault creates a GetTaskDefault with default headers values
func NewGetTaskDefault(code int) *GetTaskDefault {
	return &GetTaskDefault{
		_statusCode: code,
	}
}

/* GetTaskDefault describes a response with status code -1, with default header values.

error occurred getting tasks
*/
type GetTaskDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get task default response
func (o *GetTaskDefault) Code() int {
	return o._statusCode
}

func (o *GetTaskDefault) Error() string {
	return fmt.Sprintf("[GET /task/][%d] GetTask default  %+v", o._statusCode, o.Payload)
}
func (o *GetTaskDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTaskDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
